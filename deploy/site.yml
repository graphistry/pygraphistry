---

# TODO: Ensure that the process that the nodejs apps (central, workers) run under (currently 'www')
# has limited access. No home folder, only has read-only access to npm modules used, no access to
# .git directories, ideally no access to any SSH keys, can only write to /var/log/clients.log.

# TODO: Automatically clear the MongoDB when deploying

# TODO: Secure sensitive data:
# * Username/password variable files should be encrypted and/or distributed out-of-band.
# * No Ansible SSH private key in repo (users use their own SSH keys to log in either as `ubuntu`,
#   like present, or even as their own user account.)
# * Review account creation and permissions on 'production' machines.
# * Consider requiring passwords for `sudo` (refactor Ansible to prompt users for sudo password.)

# TODO: write out lock/status file at beginning of deploys, with the user who ran ansible, time and
# inventory filename. At the end of deploys, delete this file and add a similar file reporting
# success (this file should be deleted at the beginning of deploys.) We can further add a check at
# the beginning of deploys for this lock file (or maybe just lock files from other users?) and not
# continue if one is found.

# TODO: Use Ansible's sysctl module instead of uploading individual conf files in common/performance

# TODO: Setup ssh config on servers that enables compression and ControlMaster to speed up git
# clones of our modules' repos. Make sure this is in a place Ansilbe's git task (sudo'ed under user
# `www`) will find and use it.

# TODO: Install & configure `ccache` to speed up install of node-gyp native modules


- hosts: localhost
  gather_facts: no
  roles:
    - { role: slack, message: "{{ cluster | capitalize }} deploy started..." }
  tags:
    - provision
    - deploy
    - local
    - central_deploy
    - workers_deploy

# Only connect and deploy to proxy when `-e 'proxy=true'` is passed on the command line.
# This prevents Ansible from failing when the user running it isn't authorized to access the proxy.
- hosts: proxy
  gather_facts: no
  tasks:
    - name: Mark proxy to add to inventory
      set_fact: proxy_deploy_action={{ (proxy | default(false)) | ternary("active", "inactive") }}
    - name: Inform user about deploying to the proxy
      debug: msg="Not including proxy server in deployment. Add `-e 'proxy=true'` to ansible-playbook command to include it."
      when: "{{ (proxy | default(false)) }}"
    - name: Add marked proxies to invenvtory
      group_by: key=proxy_{{ proxy_deploy_action }}
  tags:
    - proxy
    - provision
    - deploy
    - always

- hosts: remote_servers
  gather_facts: no
  roles:
    - sshd_port
  tags:
    - sshd
    - provision

- hosts: remote_servers
  roles:
    - { role: common, become: yes, tags: [ 'common' ] }
    - { role: users, tags: [ 'users' ] }
    - { role: splunkfwd, sudo: yes, tags: [ 'splunkfwd' ] }
  tags:
    - provision

- hosts: app_servers
  roles:
   - { role: nodejs, tags: [ 'nodejs' ] }
   - { role: app_server, tags: [ 'app_servers' ] }
  tags:
    - provision
    - workers
    - central

- hosts: workers
  roles:
   - { role: cuda, tags: [ 'provision' , 'cuda' ] }
   - { role: worker, sudo: yes, sudo_user: www, tags: [ 'deploy', 'workers_deploy' ] }
  tags:
    - workers

- hosts: central
  roles:
   - { role: central, sudo: yes, sudo_user: www }
  tags:
    - central
    - deploy
    - central_deploy

- hosts: proxy_active
  roles:
    - { role: proxy }
  tags:
    - deploy
    - proxy

- hosts: localhost
  gather_facts: no
  roles:
    - { role: slack, message: "   ...{{ cluster }} deploy done! Access at http://{{ groups['central'][0] }}." }
  tags:
    - provision
    - deploy
    - local
    - central_deploy
    - workers_deploy
