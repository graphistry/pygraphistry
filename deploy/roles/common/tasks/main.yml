---
- name: Check Ansible version
  fail: msg="Your version of ansible is too old. You need at least version {{ ansible_minimum_version }} to run this playbook, but you are running version {{ ansible_version.full }}."
  when: not (ansible_version | default('0.0.0') | version_compare(ansible_minimum_version, '>='))
  run_once: true
  sudo: no
  tags:
    - version_check
    - preflight
    - deploy
    - provision
    - workers
    - central
    - deploy_server

- name: Create Ansible file folder
  sudo: no
  file: path="{{ ansible_files }}"
        state=directory
        owner=root
        mode=1777
        recurse=no
  sudo: yes
  sudo_user: root

- name: Set fully-qualified domain name
  template: src=hosts.j2 dest=/etc/hosts

- name: Set hostname
  hostname: name="{{ inventory_hostname_short }}"

- name: Configure Ubuntu cloud-init to use our hostname and not overwrite it
  template: src=50graphistry-hostname.cfg.j2
            dest=/etc/cloud/cloud.cfg.d/50graphistry-hostname.cfg
            owner=root
            group=root
            mode=0644

- name: Configure timezone
  copy: src=timezone dest=/etc/timezone owner=root group=root mode=0644

# - name: Upgrade packages
#   apt: upgrade=dist
#        state=latest
#        update_cache=yes
#        cache_valid_time=300
#   tags:
#     - system-upgrade
#     - slow

- name: Add git apt PPA repo (to get the most up-to-date git)
  apt_repository: repo='ppa:git-core/ppa'
  sudo: yes
  register: git_ppa

- name: Update apt cache for git PPA
  apt: update_cache=yes
  sudo: yes
  when: git_ppa.changed

- name: Install common tools
  apt: pkg={{ item }}
       state=latest
       update_cache=yes
       cache_valid_time=600
  with_items:
    - build-essential
    - curl
    - git
    - logrotate
    - vim
    - ack-grep
    - python-pip
    - unattended-upgrades
    - python-psutil
    - ntp
    - pkg-config
    - acl
    - schedtool

- name: Install common Python packages
  pip: name={{ item }}
  with_items:
    - setuptools
    - distribute
  sudo: yes

- name: Create apt auto-upgrades job configuration
  copy: src=auto-upgrades
        dest=/etc/apt/apt.conf.d/10periodic
        owner=root
        group=root
        mode=0644
        force=yes

- name: Enable ACLs on root filesystem
  mount: name=/
         src='LABEL=cloudimg-rootfs'
         fstype=ext4
         opts='defaults,acl,discard,barrier=0,noatime,nodiratime'
         state=mounted
  sudo: yes

- { include: tmp_mount.yml, tags: [ 'tmp_mount' ] }

- { include: performance.yml, tags: [ 'performance' ] }
