---
- { include: CUDA.yml, tags: [ 'cuda' ] }

  with_items:
  sudo: yes
  tags: provision

  sudo: yes
  tags: worker

  sudo: yes
  tags: worker

- command: mkdir /tmp/web
  ignore_errors: true
  tags:
  - worker

- command: chown -R {{ ansible_ssh_user }}:{{ ansible_ssh_user }} /tmp/web
  sudo: yes
  tags:
  - worker

- shell: "npm config set prefix '/home/{{ ansible_ssh_user }}/.npm_global'"
  tags:
    - worker

- git: repo=git@github.com:graphistry/viz-server.git dest=/tmp/web/viz-server version=master update=yes accept_hostkey=yes
  tags:
    - worker
    - fast

- command: npm install --global grunt-cli
  tags:
    - worker

- command: npm install --global node-gyp
  tags:
    - worker

# TODO: Fix this. Not sure what's up with Ansible's users.
- shell: sudo su www -l -c "cd /home/www && npm install node-webcl"
  sudo: yes
  tags:
    - worker

- shell: sudo su www -l -c "cd /home/www && npm install node-webgl"
  sudo: yes
  tags:
    - worker

- shell: chdir=/home/{{ ansible_ssh_user }}/ npm install node-webcl
  tags:
    - worker

- shell: chdir=/home/{{ ansible_ssh_user }}/ npm install node-webgl
  tags:
    - worker

- shell: chdir=/tmp/web/viz-server npm install
  tags:
    - worker
    - fast

- name: Find temporary npm directories to delete
  command: find /tmp -maxdepth 1 -iname 'npm*'
  register: npm_to_delete
  tags:
    - worker
    - fast

- name: Deleting temporary npm directories
  file: path={{ item }} state=absent
  with_items: npm_to_delete.stdout_lines
  sudo: yes
  tags:
    - worker
    - fast

- command: cp -ru /tmp/web/viz-server /opt
  sudo: yes
  tags:
    - worker
    - fast

- command: chown -R www:www /opt/
  sudo: yes
  tags:
    - worker
    - fast

- command: chmod g+w -R /opt/
  sudo: yes
  tags:
    - worker
    - fast

- command: mkdir /var/log/worker
  ignore_errors: true
  sudo: yes
  tags: worker

# - name: remove all old supervisor configs to prevent drift
#   shell: rm /etc/supervisor/conf.d/*
#   sudo: yes
#   ignore_errors: true
#   tags:
#     - worker
#     - fast
#     - supervisor

- name: first supervisor config, will add the others if this one changes
  template: src=worker.supervisor.j2 dest=/etc/supervisor/conf.d/worker-{{ item.listen_port }}.conf
  with_items:
    - { listen_port: 10000 }
  sudo: yes
  register: workerconfig
  tags:
    - worker
    - fast
    - supervisor

- name: there was a change, adding all supervisor configs
  template: src=worker.supervisor.j2 dest=/etc/supervisor/conf.d/worker-{{ item.listen_port }}.conf
  with_items:
    - { listen_port: 10001 }
    - { listen_port: 10002 }
    - { listen_port: 10003 }
    - { listen_port: 10004 }
    - { listen_port: 10005 }
    - { listen_port: 10006 }
    - { listen_port: 10007 }
  when: workerconfig.changed
  sudo: yes
  tags:
    - worker
    - fast
    - supervisor

- name: add monitoring agent
  template: src=reaper.py.j2 dest=/opt/reaper.py
  sudo: yes
  when: production == true
  tags:
    - worker
    - fast
    - reaper

- name: monitoring supervisor
  template: src=reaper.supervisor.j2 dest=/etc/supervisor/conf.d/reaper.conf
  sudo: yes
  when: production == true
  tags:
    - worker
    - reaper
    - fast
    - supervisor

# Ensure supervisord itself is running
- command: service supervisor start
  sudo: yes
  tags:
    - worker
    - reaper
    - fast
    - supervisor
  ignore_errors: true

# Read in config changes
- command: supervisorctl reread
  sudo: yes
  tags:
    - worker
    - reaper
    - fast
    - supervisor

# Reload supervisor processes
- command: supervisorctl reload
  sudo: yes
  tags:
    - worker
    - reaper
    - fast
    - supervisor
