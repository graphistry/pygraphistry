---
- { include: ../../nodejs/tasks/clear_caches.yml }

- name: Create data cache directory
  file: path="{{ graphistry_cache_path }}"
        state=directory
        recurse=no
        owner=www
        group=graphistry-dev
        mode=1777
  sudo: yes
  sudo_user: root

- name: Find cached data files to delete
  command: ls -1 "{{ graphistry_cache_path }}/"
  sudo: yes
  sudo_user: root
  register: data_cache_files
  changed_when: False

- name: Delete data cache files
  file: path="{{ graphistry_cache_path }}/{{ item }}"
        state=absent
  sudo: yes
  sudo_user: root
  with_items: data_cache_files.stdout_lines

- name: Ensure central app install path is owned by user 'www'
  sudo: yes
  sudo_user: root
  file: path={{ graphistry_install_path }}
        state=directory
        recurse=no
        owner=www
        group=www
        mode=0775

- name: Ensure everything in install path can be read/written to by group 'www'
  sudo: yes
  sudo_user: root
  file: path={{ graphistry_install_path }}
        state=directory
        recurse=yes
        group=www
        mode='g+rw'

- name: Create log directory for central app
  file: path=/var/log/central-app
        state=directory
        owner=www
        group=graphistry-dev
        mode=0775
  sudo: yes
  sudo_user: root

- name: Create directory for client logs
  file: path=/var/log/clients
        state=directory
        owner=www
        group=graphistry-dev
        mode=0775
  sudo: yes
  sudo_user: root

- name: Run central app under Supervisor
  template: src=central.conf.j2
            dest=/etc/supervisor/conf.d/central.conf
            owner=root
            group=graphistry-dev
            mode=0664
  sudo: yes
  sudo_user: root
  notify: Add central to Supervisor

- name: Delete central's old node_modules directory
  file: path={{ graphistry_install_path }}/central/node_modules
        state=absent
  sudo: yes
  sudo_user: root

- name: Clone central repo
  git: repo=git@github.com:graphistry/central.git
       dest={{ graphistry_install_path }}/central
       version="{{ central_module_checkout }}"
       update=yes
       accept_hostkey=yes
       force=yes
  register: central_updated
  notify: Restart central

- name: Prune unused npm modules from central
  command: '{{ npm_global_path }}/bin/npm prune
           chdir="{{ graphistry_install_path }}/central"'
  notify: Restart central

- name: Install central module
  npm: path={{ graphistry_install_path }}/central
       state=latest
       executable={{ npm_global_path }}/bin/npm
  environment: nodecl_env
  notify: Restart central

- name: Install nginx
  apt: pkg=nginx
       state=latest
       update_cache=yes
       cache_valid_time=600
  sudo: yes
  sudo_user: root
  notify: Restart nginx
  tags:
    - nginx

- name: Configure nginx (main config file)
  copy: src=nginx.conf
        dest=/etc/nginx/nginx.conf
        owner=root
        group=graphistry-dev
        mode=0664
  sudo: yes
  sudo_user: root
  notify: Restart nginx
  tags:
    - nginx

- name: Delete old nginx config files
  file: path=/etc/nginx/conf.d
        state=absent
  sudo: yes
  sudo_user: root
  notify: Restart nginx
  tags:
    - nginx

- name: Create Graphistry nginx config directory
  file: path=/etc/nginx/config.d
        state=directory
        owner=root
        group=graphistry-dev
        mode=0775
  sudo: yes
  sudo_user: root
  notify: Restart nginx
  tags:
    - nginx

- name: Set nginx Gzip options
  template: src=gzip.nginx.conf.j2
            dest=/etc/nginx/config.d/gzip.conf
            owner=root
            group=graphistry-dev
            mode=0664
  sudo: yes
  sudo_user: root
  notify: Restart nginx
  tags:
    - nginx

- name: Set nginx upload size options
  template: src=upload_size_limit.nginx.conf.j2
            dest=/etc/nginx/config.d/upload_size_limit.conf
            owner=root
            group=graphistry-dev
            mode=0664
  sudo: yes
  sudo_user: root
  notify: Restart nginx
  tags:
    - nginx

- name: Disable nginx default site
  file: path=/etc/nginx/sites-enabled/default
        state=absent
  sudo: yes
  sudo_user: root
  notify: Restart nginx
  tags:
    - nginx

- name: Configure nginx to proxy to nodejs
  template: src=central.site.j2
            dest=/etc/nginx/sites-enabled/central
            owner=root
            group=www
            mode=0664
  sudo: yes
  sudo_user: root
  notify: Restart nginx
  tags:
    - nginx

- name: Configure nginx to proxy to central
  template: src=proxy-central.site.j2
            dest=/etc/nginx/sites-enabled/proxy-central
            owner=root
            group=www
            mode=0664
  sudo: yes
  sudo_user: root
  notify: Restart nginx
  tags:
    - nginx
