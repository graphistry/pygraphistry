name: CI Tests

on:

  #NOTE: All jobs gated by auth job

  #Regular dev
  push:
  pull_request:

  #Enable UI-driven branch testing
  workflow_dispatch:

  #Test main bidaily @ 1a
  schedule:
    - cron: '0 1 1-31/2 * *'

jobs:


  test-minimal-python:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7]

    steps:

    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install test dependencies
      run: |
        python -m venv pygraphistry
        source pygraphistry/bin/activate
        python -m pip install --upgrade pip
        python -m pip install -e .[test]

    - name: Minimal tests
      run: |
        source pygraphistry/bin/activate
        ./bin/test-minimal.sh


  test-core-python:

    needs: [ test-minimal-python ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:

    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install test dependencies
      run: |
        python -m venv pygraphistry
        source pygraphistry/bin/activate
        python -m pip install --upgrade pip
        python -m pip install -e .[dev]

    - name: Lint
      run: |
        source pygraphistry/bin/activate
        ./bin/lint.sh

    - name: Type check
      run: |
        source pygraphistry/bin/activate
        ./bin/typecheck.sh

    - name: Core tests
      run: |
        source pygraphistry/bin/activate
        ./bin/test.sh


  test-neo4j:

    needs: [ test-minimal-python ]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Neo4j connector tests
      run: |
        cd docker && WITH_SUDO=" " ./test-cpu-local-neo4j-only.sh


  test-build:

    needs: [ test-minimal-python ]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .[build]

    - name: Test building
      run: |
        ./bin/build.sh

  
  test-docs:

    needs: [ test-minimal-python ]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Test building docs
      run: |
        cd docs && ./docker.sh

  
  test-readme:

    needs: [ test-minimal-python ]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Test building docs
      continue-on-error: true
      run: |
        docker run --rm -v "$(pwd)/README.md:/README.md:ro" avtodev/markdown-lint:v1 README.md

  
